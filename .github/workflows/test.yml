name: Test

on:
  push:

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable

      - name: Use binstall
        uses: cargo-bins/cargo-binstall@main

      - name: Install cargo-leptos
        run: |
          cargo binstall cargo-leptos -y
          rustup target add wasm32-unknown-unknown  

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
          cache-dependency-path: app/end2end/package-lock.json

      - name: Cache Playwright browsers
        uses: actions/cache@v4
        with:
          path: ~/.cache/ms-playwright
          key: ${{ runner.os }}-playwright-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-playwright-

      - name: Install npm dependencies and playwright
        working-directory: app/end2end
        run: |
          npm ci
          npx playwright install --with-deps
      
      - name: Rust cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      
      - name: Build App
        working-directory: app
        run: cargo leptos build --release
      
      - name: Run server in background
        run: ./target/release/starter_template &

      - name: Run playwright tests (Web)
        run: npx playwright test -- --baseURL=http://localhost:3000

      - name: Setup Linux for Tauris
        run: |
          sudo apt update
          sudo apt install -y 
          libwebkit2gtk-4.1-dev 
          build-essential 
          curl 
          wget 
          file 
          libxdo-dev 
          libssl-dev 
          libayatana-appindicator3-dev 
          librsvg2-dev

      - name: Install tauri
        run: cargo binstall tauri-cli --version "^2.0.0" --locked
          
      - name: Run 
        run: cargo tauri dev

      - name: Run playwright tests (Tauri)
        run: npx playwright test -- --baseURL=http://localhost:5000

      - name: Tar Server Bundle
        run: |
          mkdir -p app_tar/target/site
          cp target/release/starter_template app_tar/
          cp -r target/site app_tar/target
          tar -cvf app.tar -C app_tar .

      - name: Upload App Bundle
        uses: actions/upload-artifact@v4
        with:
          name: server-tar
          path: app.tar

